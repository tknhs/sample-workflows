name: get-env-secret

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'target environment'
        required: true
        type: choice
        default: staging
        options:
        - staging
        - production

env:
  ENV_DATA_STAGING: staging-environment
  ENV_DATA_PRODUCTION: production-environment

jobs:
  setup-vars:
    name: Setup Vars
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      env-data: ${{ steps.env-data.outputs.ed }}
      sample-secret: ${{ steps.sample-secret.outputs.ss }}
    steps:
    - name: Convert target to uppercase
      id: convert-to-uppercase
      run: |
        target=${{ github.event.inputs.target }}
        echo "::set-output name=target::${target^^}"

    - name: Env Data
      id: env-data
      run: |
        if [ "${{ github.event.inputs.target }}" == "production" ]; then
          env_data="${{ env.ENV_DATA_PRODUCTION }}"
        else
          env_data="${{ env.ENV_DATA_STAGING }}"
        fi
        echo "::set-output name=ed::${env_data}"

    - name: Sample Secret
      id: sample-secret
      run: |
        ss="SAMPLE_SECRET_${{ steps.convert-to-uppercase.outputs.target }}"
        echo "::set-output name=ss::${ss}"

  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [setup-vars]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Run a one-line script
      env:
        ENV_DATA: "${{ needs.setup-vars.outputs.env-data }}"
        SAMPLE_SECRET: "${{ needs.setup-vars.outputs.sample-secret }}"
      run: |
        echo "${{ env.ENV_DATA }}"
        echo "${{ secrets[env.SAMPLE_SECRET] }}"
